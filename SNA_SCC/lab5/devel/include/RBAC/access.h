// Generated by gencpp from file RBAC/access.msg
// DO NOT EDIT!


#ifndef RBAC_MESSAGE_ACCESS_H
#define RBAC_MESSAGE_ACCESS_H

#include <ros/service_traits.h>


#include <RBAC/accessRequest.h>
#include <RBAC/accessResponse.h>


namespace RBAC
{

struct access
{

typedef accessRequest Request;
typedef accessResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct access
} // namespace RBAC


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::RBAC::access > {
  static const char* value()
  {
    return "a35aabb2e81bd422fdd731c4a33a3278";
  }

  static const char* value(const ::RBAC::access&) { return value(); }
};

template<>
struct DataType< ::RBAC::access > {
  static const char* value()
  {
    return "RBAC/access";
  }

  static const char* value(const ::RBAC::access&) { return value(); }
};


// service_traits::MD5Sum< ::RBAC::accessRequest> should match
// service_traits::MD5Sum< ::RBAC::access >
template<>
struct MD5Sum< ::RBAC::accessRequest>
{
  static const char* value()
  {
    return MD5Sum< ::RBAC::access >::value();
  }
  static const char* value(const ::RBAC::accessRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::RBAC::accessRequest> should match
// service_traits::DataType< ::RBAC::access >
template<>
struct DataType< ::RBAC::accessRequest>
{
  static const char* value()
  {
    return DataType< ::RBAC::access >::value();
  }
  static const char* value(const ::RBAC::accessRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::RBAC::accessResponse> should match
// service_traits::MD5Sum< ::RBAC::access >
template<>
struct MD5Sum< ::RBAC::accessResponse>
{
  static const char* value()
  {
    return MD5Sum< ::RBAC::access >::value();
  }
  static const char* value(const ::RBAC::accessResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::RBAC::accessResponse> should match
// service_traits::DataType< ::RBAC::access >
template<>
struct DataType< ::RBAC::accessResponse>
{
  static const char* value()
  {
    return DataType< ::RBAC::access >::value();
  }
  static const char* value(const ::RBAC::accessResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RBAC_MESSAGE_ACCESS_H
